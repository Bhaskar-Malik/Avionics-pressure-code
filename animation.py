import pandas as pd
import matplotlib.pyplot as plt
from matplotlib.animation import FuncAnimation
from itertools import count
#I was running the code in interactive window  :( and it wasnt working
plt.style.use('fivethirtyeight')#Added style
index=count()
alti=[]#Empty list in which data will be appended
data_alti=[#I didnt put these commas one by one,just used excel for it 
0,
0,
0.0976003252035298,
-0.29280617886252,
-1.30081207316834E-06,
-0.0976029268294951,
-1.30081207316834E-06,
-0.0976029268294951,
-0.195204552845098,
-0.195204552845098,
-0.0976029268294951,
-0.29280617886252,
-0.29280617886252,
-0.195204552845098,
-0.0976029268294951,
-0.29280617886252,
-0.195204552845098,
-0.0976029268294951,
-0.195204552845098,
-0.29280617886252,
-0.29280617886252,
-0.29280617886252,
-0.29280617886252,
-0.29280617886252,
-0.29280617886252,
-0.0976029268294951,
-0.390407804878123,
8.00333203252012,
56.2185352845527,
146.500039349593,
166.996380813009,
251.714592195122,
314.374836097561,
364.054063739838,
393.432153170731,
408.462803577236,
418.222966178862,
420.174998699187,
413.83089300813,
375.571055609757,
387.47845398374,
369.519754796748,
351.756258861789,
322.3782,
310.76357593496,
290.950445853658,
270.844510894309,
250.73857593496,
229.754226341463,
207.501055609756,
187.785527154472,
164.84914504065,
124.344470243902,
81.7901613008135,
60.3178035772362,
41.5782913821149,
21.8627629268303,
]
data_vel=[0,
0,
0.0325334417345099,
-0.07320154471563,
0,
-0.0162671544715825,
0,
-0.0122003658536869,
-0.0216893947605665,
-0.0195204552845098,
-0.00887299334813592,
-0.02440051490521,
-0.0225235522201938,
-0.0139431823460784,
-0.00650686178863301,
-0.0183003861789075,
-0.011482620755594,
-0.00542238482386084,
-0.0102739238339525,
-0.014640308943126,
-0.0139431513744057,
-0.0133093717664782,
-0.0127307034288052,
-0.012200257452605,
-0.0117122471545008,
-0.00375395872421135,
-0.0144595483288194,
0.285833286875719,
1.93857018222595,
4.88333464498643,
5.38698002622609,
7.86608100609757,
9.52651018477456,
10.7074724629364,
11.2409186620209,
11.3461889882565,
11.3033234102395,
11.0572368078733,
10.61104853867,
9.38927639024391,
9.45069399960342,
8.79808939992258,
8.18037811306487,
7.32677727272727,
6.9058572429991,
6.32500969247084,
5.76264916796402,
5.22372033197833,
4.68886176207068,
4.15002111219512,
3.68206915989161,
3.17017586616635,
2.34612208007362,
1.51463261668173,
1.09668733776793,
0.742469488966338,
0.383557244330357,
]
vel=[]#The similar velocity empty list
time=[]
def anialt(i):#Animate Altitude vs Time
   
      time.append(i)#Used the data frame as my seconds :)
      alti.append(data_alti[i])#Also usd the data frame as i of the data
      plt.cla()#Clears the previous line
      plt.plot(time,alti)
def anivel(i):#Animate Velocity vs Time
      time.append(i)
      vel.append(data_vel[i])
      plt.cla()
      plt.plot(time,vel,color='orange')
def aniboth(i):#This is for both statements
      time.append(i)
      vel.append(data_vel[i])
      alti.append(data_alti[i])
      plt.cla()
      plt.plot(time,vel,color='orange',label='Velocity vs Time')
      plt.plot(time,alti,color='blue',label='Altitude vs Time')
      plt.legend()#Adds a label on top right corner
#Some if-else based statements
print("Altitude vs Time(Press 1)")
print("Velocity vs Time(Press 2)")
print("Both(Press 3)")
ch=int(input("Which graph animation do you want to see: "))
if ch==1:
      ani=FuncAnimation(plt.gcf(),anialt,interval=1000,frames=len(data_alti))
elif ch==2:
      ani=FuncAnimation(plt.gcf(),anivel,interval=1000,frames=len(data_alti))
else:
      ani=FuncAnimation(plt.gcf(),aniboth,interval=1000,frames=len(data_alti))#frame length of both datas is same so doesnt matter :)

plt.show()
